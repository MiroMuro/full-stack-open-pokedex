name: Deployment pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]

jobs:
  get_pr_commit_message:
    runs-on: ubuntu-20.04
    steps:
      - name: Determine if this is a pull request
        run: |
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            echo "This is a pull request event."
            echo "IS_PULL_REQUEST=true" >> $GITHUB_ENV
            echo "LATEST_LINK=${{toJson(github.event.pull_request._links.commits.href)}}" >> $GITHUB_ENV
          else
            echo "This is not a pull request event."
            echo "IS_PULL_REQUEST=false" >> $GITHUB_ENV
          fi

      - name: Print the IS_PULL_REQUEST variable
        run: echo "IS_PULL_REQUEST=$IS_PULL_REQUEST" echo "LATEST_LINK=$LATEST_LINK"

      - name: Conditional step based on IS_PULL_REQUEST
        if: ${{env.IS_PULL_REQUEST == 'true'}}
        run: |
          echo "This step runs only for pull request events." 
          echo "CONTENT=$(curl -s -H "Accept: application/vnd.github.v3+json" $LATEST_LINK | jq '.[0].commit.message')"
          echo "Fetched content: $CONTENT"
          echo "CONTENT=${CONTENT}" >> $GITHUB_ENV

  simple_deployment_pipeline:
    runs-on: ubuntu-20.04
    needs: [get_pr_commit_message]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
      - name: Install dependencies
        run: npm install
      - name: Npm install succeeded
        if: ${{ success() }}
        uses: rjstone/discord-webhook-notify@v1
        with:
          severity: "info"
          description: "Npm install successful"
          webhook_url: ${{ secrets.DISCORD_WEBHOOK}}
      - name: Check style with Lint
        run: npm run eslint
      - name: Build
        run: npm run build
      - name: Test
        run: npm run test
      - name: e2e tests
        uses: cypress-io/github-action@v5
        with:
          command: npm run test:e2e
          start: npm run start-prod
          wait-on: http://localhost:5000
      - name: Render Deployment
        if: ${{ github.event_name == 'push' && env.CONTENT != '#skip'}}
        uses: sws2apps/render-deployment@v1.6.0
        with:
          serviceId: ${{ secrets.RENDER_SERVICE_ID }}
          apiKey: ${{ secrets.RENDER_API_KEY }}
      - name: Notify discord on success
        if: ${{success() && steps.render_deployment.conclusion == 'success'}}
        uses: rjstone/discord-webhook-notify@v1
        with:
          severity: "info"
          description: "Deployment successful"
          webhook_url: ${{ secrets.DISCORD_WEBHOOK}}
      - name: Notify discord on failure
        if: ${{failure() && steps.render_deployment.conclusion == 'failure'}}
        uses: rjstone/discord-webhook-notify@v1
        with:
          severity: "error"
          description: "Deployment failed"
          webhook_url: ${{ secrets.DISCORD_WEBHOOK}}
  tag_release:
    runs-on: ubuntu-20.04
    needs: [simple_deployment_pipeline]
    steps:
      - uses: actions/checkout@v4
      - name: Bump version and push tag
        uses: anothrNick/github-tag-action@1.67.0
        if: ${{ github.event_name == 'push' && env.CONTENT != '#skip'}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: patch
